# 04-workspace-example/pyproject.toml (루트)

# 이 파일은 여러 개의 하위 Python 패키지를 하나의 그룹(워크스페이스)으로 묶어
# 관리하는 모노레포(Monorepo) 구조를 보여줍니다.

# --- 1. 루트 프로젝트 정의 ---
[project]
# 워크스페이스의 루트가 되는 메인 애플리케이션 또는 진입점 프로젝트입니다.
name = "my-monorepo-app"
version = "0.1.0"
requires-python = ">=3.9"

# 루트 프로젝트는 워크스페이스의 멤버인 `my-core-library`에 의존합니다.
dependencies = [
    "my-core-library",
    "fastapi",
]

# --- 2. 워크스페이스 멤버를 의존성으로 연결 ---
# [tool.uv.sources] 테이블은 PyPI가 아닌 다른 소스에서 의존성을
# 가져올 때 사용합니다. `workspace = true`는 해당 의존성을
# PyPI가 아닌 바로 이 워크스페이스 내부에서 찾으라는 의미입니다.
[tool.uv.sources]
my-core-library = { workspace = true }


# --- 3. 워크스페이스 정의 ---
# [tool.uv.workspace] 테이블에서 이 워크스페이스에 포함될 멤버들을 정의합니다.
# `members`는 glob 패턴을 사용하여 하위 패키지들의 위치를 지정합니다.
[tool.uv.workspace]
members = ["packages/*"]
